#version: "3.7"
x-api: &default-api
  # image: ghcr.io/openimis/openimis-be:${BE_TAG:-develop}
  image: openimis-be-ml:latest
  build: 
    context: ./openimis-be_py/
    dockerfile: Dockerfile
  environment:
    - DB_DEFAULT=${DB_DEFAULT:-postgresql}
    - DB_HOST=${DB_HOST}
    - DB_PORT=${DB_PORT}
    - DB_NAME=${DB_NAME}
    - DB_USER=${DB_USER}
    - DB_PASSWORD=${DB_PASSWORD}
    - SITE_ROOT=api
    - SITE_URL=${DOMAIN}
    - CELERY_BROKER_URL=amqp://rabbitmq
    - MODE=${MODE:-Prod}
    - CSRF_TRUSTED_ORIGINS=https://localhost,http://localhost,http://localhost:8000,http://localhost:3000
  volumes:
    - photos:/openimis-be/openIMIS/images/insurees
  depends_on:
    db:
      condition: service_healthy
  networks:
    openimis-net:
  restart: always

services:
  frontend:
    container_name: ${PROJECT_NAME:-openimis}-frontend
    # image: ghcr.io/openimis/openimis-fe:${FE_TAG:-develop}
    image: openimis-fe-ml:latest
    build: 
      context: ./openimis-fe_js/
      dockerfile: Dockerfile
    restart: always
    environment:
      - REACT_APP_API_URL=api
      - NEW_OPENIMIS_HOST=${DOMAIN}
      - OPENIMIS_CONF_JSON=${OPENIMIS_FE_CONF_JSON}
      - OPENSEARCH_BASIC_TOKEN=${OPENSEARCH_BASIC_TOKEN}
    networks:
      openimis-net:
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    depends_on:
      - backend
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      # comment the following line if you are using your own gateway
      - ./conf/nginx:/conf/
  backend:
    <<: *default-api
    container_name: ${PROJECT_NAME:-openimis}-api
    command: start      
  
  worker:
    <<: *default-api
    container_name: ${PROJECT_NAME:-openimis}-worker
    command: worker
  rabbitmq:
    container_name: ${PROJECT_NAME:-openimis}-rabbitmq
    image: rabbitmq:3-management
    restart: always
    networks:
      openimis-net:
    ports:
      - 5672:5672
networks:
  openimis-net:
    name: "${PROJECT_NAME:-openimis}-net"
volumes:
  database:
  photos:
